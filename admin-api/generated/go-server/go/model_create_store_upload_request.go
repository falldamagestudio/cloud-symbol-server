/*
 * Cloud Symbol Server Admin API
 *
 * This is the API that is used to manage stores and uploads in Cloud Symbol Server
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

type CreateStoreUploadRequest struct {

	// When present and set to true, the client will provide progress updates; Legacy clients will create an upload, then upload the required files to GCS, without progress/completion callbacks
	UseProgressApi bool `json:"useProgressApi,omitempty"`

	Description string `json:"description,omitempty"`

	BuildId string `json:"buildId,omitempty"`

	Files []UploadFileRequest `json:"files,omitempty"`
}

// AssertCreateStoreUploadRequestRequired checks if the required fields are not zero-ed
func AssertCreateStoreUploadRequestRequired(obj CreateStoreUploadRequest) error {
	for _, el := range obj.Files {
		if err := AssertUploadFileRequestRequired(el); err != nil {
			return err
		}
	}
	return nil
}

// AssertRecurseCreateStoreUploadRequestRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of CreateStoreUploadRequest (e.g. [][]CreateStoreUploadRequest), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseCreateStoreUploadRequestRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aCreateStoreUploadRequest, ok := obj.(CreateStoreUploadRequest)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertCreateStoreUploadRequestRequired(aCreateStoreUploadRequest)
	})
}
