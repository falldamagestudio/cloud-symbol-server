// Code generated by SQLBoiler 4.13.0 (https://github.com/volatiletech/sqlboiler). DO NOT EDIT.
// This file is meant to be re-generated in place and/or deleted at any time.

package models

import (
	"strconv"

	"github.com/friendsofgo/errors"
	"github.com/volatiletech/sqlboiler/v4/boil"
	"github.com/volatiletech/strmangle"
)

// M type is for providing columns and column values to UpdateAll.
type M map[string]interface{}

// ErrSyncFail occurs during insert when the record could not be retrieved in
// order to populate default value information. This usually happens when LastInsertId
// fails or there was a primary key configuration that was not resolvable.
var ErrSyncFail = errors.New("models: failed to synchronize data after insert")

type insertCache struct {
	query        string
	retQuery     string
	valueMapping []uint64
	retMapping   []uint64
}

type updateCache struct {
	query        string
	valueMapping []uint64
}

func makeCacheKey(cols boil.Columns, nzDefaults []string) string {
	buf := strmangle.GetBuffer()

	buf.WriteString(strconv.Itoa(cols.Kind))
	for _, w := range cols.Cols {
		buf.WriteString(w)
	}

	if len(nzDefaults) != 0 {
		buf.WriteByte('.')
	}
	for _, nz := range nzDefaults {
		buf.WriteString(nz)
	}

	str := buf.String()
	strmangle.PutBuffer(buf)
	return str
}

// Enum values for StoreFileBlobType
const (
	StoreFileBlobTypeUnknown string = "unknown"
	StoreFileBlobTypePe      string = "pe"
	StoreFileBlobTypePDB     string = "pdb"
)

func AllStoreFileBlobType() []string {
	return []string{
		StoreFileBlobTypeUnknown,
		StoreFileBlobTypePe,
		StoreFileBlobTypePDB,
	}
}

// Enum values for StoreFileBlobStatus
const (
	StoreFileBlobStatusPending string = "pending"
	StoreFileBlobStatusPresent string = "present"
)

func AllStoreFileBlobStatus() []string {
	return []string{
		StoreFileBlobStatusPending,
		StoreFileBlobStatusPresent,
	}
}

// Enum values for StoreUploadFileStatus
const (
	StoreUploadFileStatusAlreadyPresent string = "already_present"
	StoreUploadFileStatusPending        string = "pending"
	StoreUploadFileStatusCompleted      string = "completed"
	StoreUploadFileStatusAborted        string = "aborted"
	StoreUploadFileStatusExpired        string = "expired"
)

func AllStoreUploadFileStatus() []string {
	return []string{
		StoreUploadFileStatusAlreadyPresent,
		StoreUploadFileStatusPending,
		StoreUploadFileStatusCompleted,
		StoreUploadFileStatusAborted,
		StoreUploadFileStatusExpired,
	}
}

// Enum values for StoreUploadStatus
const (
	StoreUploadStatusInProgress string = "in_progress"
	StoreUploadStatusCompleted  string = "completed"
	StoreUploadStatusAborted    string = "aborted"
	StoreUploadStatusExpired    string = "expired"
)

func AllStoreUploadStatus() []string {
	return []string{
		StoreUploadStatusInProgress,
		StoreUploadStatusCompleted,
		StoreUploadStatusAborted,
		StoreUploadStatusExpired,
	}
}
