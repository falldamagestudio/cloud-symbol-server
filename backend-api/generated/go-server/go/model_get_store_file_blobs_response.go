/*
 * Cloud Symbol Server Admin API
 *
 * This is the API that is used to manage stores and uploads in Cloud Symbol Server
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

type GetStoreFileBlobsResponse struct {

	Blobs []GetStoreFileBlobResponse `json:"blobs"`

	Pagination PaginationResponse `json:"pagination"`
}

// AssertGetStoreFileBlobsResponseRequired checks if the required fields are not zero-ed
func AssertGetStoreFileBlobsResponseRequired(obj GetStoreFileBlobsResponse) error {
	elements := map[string]interface{}{
		"blobs": obj.Blobs,
		"pagination": obj.Pagination,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	for _, el := range obj.Blobs {
		if err := AssertGetStoreFileBlobResponseRequired(el); err != nil {
			return err
		}
	}
	if err := AssertPaginationResponseRequired(obj.Pagination); err != nil {
		return err
	}
	return nil
}

// AssertRecurseGetStoreFileBlobsResponseRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of GetStoreFileBlobsResponse (e.g. [][]GetStoreFileBlobsResponse), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseGetStoreFileBlobsResponseRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aGetStoreFileBlobsResponse, ok := obj.(GetStoreFileBlobsResponse)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertGetStoreFileBlobsResponseRequired(aGetStoreFileBlobsResponse)
	})
}
