/*
 * Cloud Symbol Server Admin API
 *
 * This is the API that is used to manage stores and uploads in Cloud Symbol Server
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

type GetStoreUploadResponse struct {

	UploadId int32 `json:"uploadId"`

	Description string `json:"description"`

	BuildId string `json:"buildId"`

	Timestamp string `json:"timestamp"`

	Files []GetStoreUploadFileResponse `json:"files"`

	Status StoreUploadStatus `json:"status"`
}

// AssertGetStoreUploadResponseRequired checks if the required fields are not zero-ed
func AssertGetStoreUploadResponseRequired(obj GetStoreUploadResponse) error {
	elements := map[string]interface{}{
		"uploadId": obj.UploadId,
		"description": obj.Description,
		"buildId": obj.BuildId,
		"timestamp": obj.Timestamp,
		"files": obj.Files,
		"status": obj.Status,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	for _, el := range obj.Files {
		if err := AssertGetStoreUploadFileResponseRequired(el); err != nil {
			return err
		}
	}
	return nil
}

// AssertRecurseGetStoreUploadResponseRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of GetStoreUploadResponse (e.g. [][]GetStoreUploadResponse), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseGetStoreUploadResponseRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aGetStoreUploadResponse, ok := obj.(GetStoreUploadResponse)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertGetStoreUploadResponseRequired(aGetStoreUploadResponse)
	})
}
