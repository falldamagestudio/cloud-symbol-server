/*
 * Cloud Symbol Server Admin API
 *
 * This is the API that is used to manage stores and uploads in Cloud Symbol Server
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

type GetStoreFilesResponse struct {

	Files []string `json:"files"`

	Pagination PaginationResponse `json:"pagination"`
}

// AssertGetStoreFilesResponseRequired checks if the required fields are not zero-ed
func AssertGetStoreFilesResponseRequired(obj GetStoreFilesResponse) error {
	elements := map[string]interface{}{
		"files": obj.Files,
		"pagination": obj.Pagination,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	if err := AssertPaginationResponseRequired(obj.Pagination); err != nil {
		return err
	}
	return nil
}

// AssertRecurseGetStoreFilesResponseRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of GetStoreFilesResponse (e.g. [][]GetStoreFilesResponse), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseGetStoreFilesResponseRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aGetStoreFilesResponse, ok := obj.(GetStoreFilesResponse)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertGetStoreFilesResponseRequired(aGetStoreFilesResponse)
	})
}
