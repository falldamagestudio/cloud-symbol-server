/*
Cloud Symbol Server Admin API

This is the API that is used to manage stores and uploads in Cloud Symbol Server

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// CreateStoreUploadFileRequest struct for CreateStoreUploadFileRequest
type CreateStoreUploadFileRequest struct {
	FileName string `json:"fileName"`
	BlobIdentifier string `json:"blobIdentifier"`
}

// NewCreateStoreUploadFileRequest instantiates a new CreateStoreUploadFileRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateStoreUploadFileRequest(fileName string, blobIdentifier string) *CreateStoreUploadFileRequest {
	this := CreateStoreUploadFileRequest{}
	this.FileName = fileName
	this.BlobIdentifier = blobIdentifier
	return &this
}

// NewCreateStoreUploadFileRequestWithDefaults instantiates a new CreateStoreUploadFileRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateStoreUploadFileRequestWithDefaults() *CreateStoreUploadFileRequest {
	this := CreateStoreUploadFileRequest{}
	return &this
}

// GetFileName returns the FileName field value
func (o *CreateStoreUploadFileRequest) GetFileName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FileName
}

// GetFileNameOk returns a tuple with the FileName field value
// and a boolean to check if the value has been set.
func (o *CreateStoreUploadFileRequest) GetFileNameOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.FileName, true
}

// SetFileName sets field value
func (o *CreateStoreUploadFileRequest) SetFileName(v string) {
	o.FileName = v
}

// GetBlobIdentifier returns the BlobIdentifier field value
func (o *CreateStoreUploadFileRequest) GetBlobIdentifier() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.BlobIdentifier
}

// GetBlobIdentifierOk returns a tuple with the BlobIdentifier field value
// and a boolean to check if the value has been set.
func (o *CreateStoreUploadFileRequest) GetBlobIdentifierOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.BlobIdentifier, true
}

// SetBlobIdentifier sets field value
func (o *CreateStoreUploadFileRequest) SetBlobIdentifier(v string) {
	o.BlobIdentifier = v
}

func (o CreateStoreUploadFileRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["fileName"] = o.FileName
	}
	if true {
		toSerialize["blobIdentifier"] = o.BlobIdentifier
	}
	return json.Marshal(toSerialize)
}

type NullableCreateStoreUploadFileRequest struct {
	value *CreateStoreUploadFileRequest
	isSet bool
}

func (v NullableCreateStoreUploadFileRequest) Get() *CreateStoreUploadFileRequest {
	return v.value
}

func (v *NullableCreateStoreUploadFileRequest) Set(val *CreateStoreUploadFileRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateStoreUploadFileRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateStoreUploadFileRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateStoreUploadFileRequest(val *CreateStoreUploadFileRequest) *NullableCreateStoreUploadFileRequest {
	return &NullableCreateStoreUploadFileRequest{value: val, isSet: true}
}

func (v NullableCreateStoreUploadFileRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateStoreUploadFileRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


