/*
Cloud Symbol Server Admin API

This is the API that is used to manage stores and uploads in Cloud Symbol Server

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// GetStoreFileBlobsResponse struct for GetStoreFileBlobsResponse
type GetStoreFileBlobsResponse struct {
	Blobs []GetStoreFileBlobResponse `json:"blobs"`
	Pagination PaginationResponse `json:"pagination"`
}

// NewGetStoreFileBlobsResponse instantiates a new GetStoreFileBlobsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetStoreFileBlobsResponse(blobs []GetStoreFileBlobResponse, pagination PaginationResponse) *GetStoreFileBlobsResponse {
	this := GetStoreFileBlobsResponse{}
	this.Blobs = blobs
	this.Pagination = pagination
	return &this
}

// NewGetStoreFileBlobsResponseWithDefaults instantiates a new GetStoreFileBlobsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetStoreFileBlobsResponseWithDefaults() *GetStoreFileBlobsResponse {
	this := GetStoreFileBlobsResponse{}
	return &this
}

// GetBlobs returns the Blobs field value
func (o *GetStoreFileBlobsResponse) GetBlobs() []GetStoreFileBlobResponse {
	if o == nil {
		var ret []GetStoreFileBlobResponse
		return ret
	}

	return o.Blobs
}

// GetBlobsOk returns a tuple with the Blobs field value
// and a boolean to check if the value has been set.
func (o *GetStoreFileBlobsResponse) GetBlobsOk() ([]GetStoreFileBlobResponse, bool) {
	if o == nil {
    return nil, false
	}
	return o.Blobs, true
}

// SetBlobs sets field value
func (o *GetStoreFileBlobsResponse) SetBlobs(v []GetStoreFileBlobResponse) {
	o.Blobs = v
}

// GetPagination returns the Pagination field value
func (o *GetStoreFileBlobsResponse) GetPagination() PaginationResponse {
	if o == nil {
		var ret PaginationResponse
		return ret
	}

	return o.Pagination
}

// GetPaginationOk returns a tuple with the Pagination field value
// and a boolean to check if the value has been set.
func (o *GetStoreFileBlobsResponse) GetPaginationOk() (*PaginationResponse, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Pagination, true
}

// SetPagination sets field value
func (o *GetStoreFileBlobsResponse) SetPagination(v PaginationResponse) {
	o.Pagination = v
}

func (o GetStoreFileBlobsResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["blobs"] = o.Blobs
	}
	if true {
		toSerialize["pagination"] = o.Pagination
	}
	return json.Marshal(toSerialize)
}

type NullableGetStoreFileBlobsResponse struct {
	value *GetStoreFileBlobsResponse
	isSet bool
}

func (v NullableGetStoreFileBlobsResponse) Get() *GetStoreFileBlobsResponse {
	return v.value
}

func (v *NullableGetStoreFileBlobsResponse) Set(val *GetStoreFileBlobsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableGetStoreFileBlobsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableGetStoreFileBlobsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetStoreFileBlobsResponse(val *GetStoreFileBlobsResponse) *NullableGetStoreFileBlobsResponse {
	return &NullableGetStoreFileBlobsResponse{value: val, isSet: true}
}

func (v NullableGetStoreFileBlobsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetStoreFileBlobsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


