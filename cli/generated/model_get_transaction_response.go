/*
Cloud Symbol Store Uplaod API

This is the API that is used to upload symbols to Cloud Symbol Store

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// GetTransactionResponse struct for GetTransactionResponse
type GetTransactionResponse struct {
	Description *string `json:"description,omitempty"`
	BuildId *string `json:"buildId,omitempty"`
	Timestamp *string `json:"timestamp,omitempty"`
	Files *[]GetFileResponse `json:"files,omitempty"`
}

// NewGetTransactionResponse instantiates a new GetTransactionResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetTransactionResponse() *GetTransactionResponse {
	this := GetTransactionResponse{}
	return &this
}

// NewGetTransactionResponseWithDefaults instantiates a new GetTransactionResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetTransactionResponseWithDefaults() *GetTransactionResponse {
	this := GetTransactionResponse{}
	return &this
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *GetTransactionResponse) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetTransactionResponse) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *GetTransactionResponse) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *GetTransactionResponse) SetDescription(v string) {
	o.Description = &v
}

// GetBuildId returns the BuildId field value if set, zero value otherwise.
func (o *GetTransactionResponse) GetBuildId() string {
	if o == nil || o.BuildId == nil {
		var ret string
		return ret
	}
	return *o.BuildId
}

// GetBuildIdOk returns a tuple with the BuildId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetTransactionResponse) GetBuildIdOk() (*string, bool) {
	if o == nil || o.BuildId == nil {
		return nil, false
	}
	return o.BuildId, true
}

// HasBuildId returns a boolean if a field has been set.
func (o *GetTransactionResponse) HasBuildId() bool {
	if o != nil && o.BuildId != nil {
		return true
	}

	return false
}

// SetBuildId gets a reference to the given string and assigns it to the BuildId field.
func (o *GetTransactionResponse) SetBuildId(v string) {
	o.BuildId = &v
}

// GetTimestamp returns the Timestamp field value if set, zero value otherwise.
func (o *GetTransactionResponse) GetTimestamp() string {
	if o == nil || o.Timestamp == nil {
		var ret string
		return ret
	}
	return *o.Timestamp
}

// GetTimestampOk returns a tuple with the Timestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetTransactionResponse) GetTimestampOk() (*string, bool) {
	if o == nil || o.Timestamp == nil {
		return nil, false
	}
	return o.Timestamp, true
}

// HasTimestamp returns a boolean if a field has been set.
func (o *GetTransactionResponse) HasTimestamp() bool {
	if o != nil && o.Timestamp != nil {
		return true
	}

	return false
}

// SetTimestamp gets a reference to the given string and assigns it to the Timestamp field.
func (o *GetTransactionResponse) SetTimestamp(v string) {
	o.Timestamp = &v
}

// GetFiles returns the Files field value if set, zero value otherwise.
func (o *GetTransactionResponse) GetFiles() []GetFileResponse {
	if o == nil || o.Files == nil {
		var ret []GetFileResponse
		return ret
	}
	return *o.Files
}

// GetFilesOk returns a tuple with the Files field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetTransactionResponse) GetFilesOk() (*[]GetFileResponse, bool) {
	if o == nil || o.Files == nil {
		return nil, false
	}
	return o.Files, true
}

// HasFiles returns a boolean if a field has been set.
func (o *GetTransactionResponse) HasFiles() bool {
	if o != nil && o.Files != nil {
		return true
	}

	return false
}

// SetFiles gets a reference to the given []GetFileResponse and assigns it to the Files field.
func (o *GetTransactionResponse) SetFiles(v []GetFileResponse) {
	o.Files = &v
}

func (o GetTransactionResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.BuildId != nil {
		toSerialize["buildId"] = o.BuildId
	}
	if o.Timestamp != nil {
		toSerialize["timestamp"] = o.Timestamp
	}
	if o.Files != nil {
		toSerialize["files"] = o.Files
	}
	return json.Marshal(toSerialize)
}

type NullableGetTransactionResponse struct {
	value *GetTransactionResponse
	isSet bool
}

func (v NullableGetTransactionResponse) Get() *GetTransactionResponse {
	return v.value
}

func (v *NullableGetTransactionResponse) Set(val *GetTransactionResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableGetTransactionResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableGetTransactionResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetTransactionResponse(val *GetTransactionResponse) *NullableGetTransactionResponse {
	return &NullableGetTransactionResponse{value: val, isSet: true}
}

func (v NullableGetTransactionResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetTransactionResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


