<Project Sdk="Microsoft.NET.Sdk">

  <ItemGroup>
    <ProjectReference Include="..\ClientAPI\ClientAPI.csproj" />
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="CommandLineParser" Version="2.8.0" />
    <PackageReference Include="Microsoft.Extensions.FileSystemGlobbing" Version="6.0.0" />
  </ItemGroup>

  <PropertyGroup>
    <OutputType>Exe</OutputType>
    <TargetFramework>net6.0</TargetFramework>
    <ImplicitUsings>enable</ImplicitUsings>
    <Nullable>enable</Nullable>

    <!-- Publishing-related settings -->

    <!--
      Publish all application-dependent files in a single file
      Reference: https://docs.microsoft.com/en-us/dotnet/core/deploying/single-file
    -->
    <PublishSingleFile>true</PublishSingleFile>

    <!--
      Include .NET runtime within single-file distribution
      Reference: https://docs.microsoft.com/en-us/dotnet/core/deploying/
    -->
    <SelfContained>true</SelfContained>

    <!--
      Default to publishing for linux/x64
      Reference: https://docs.microsoft.com/en-us/dotnet/core/rid-catalog#linux-rids
    -->
    <RuntimeIdentifier>linux-x64</RuntimeIdentifier>

    <!--
      Perform Ahead-of-Time compilation of code
      This improves startup time, but increases binary size
      Reference: https://docs.microsoft.com/en-us/dotnet/core/deploying/ready-to-run
    -->
    <PublishReadyToRun>true</PublishReadyToRun>

    <!--
      Trim unused code from executable
      This produces a number of trimming warnings, but the resulting executable
        seems to work anyway
      Reference: https://docs.microsoft.com/en-us/dotnet/core/deploying/trimming/trim-self-contained
    -->
    <PublishTrimmed>true</PublishTrimmed>
  </PropertyGroup>

</Project>
